generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = "file:dev.db?mode=memory&cache=shared"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  categories    Category[]
  emails        Email[]
  gmailAccounts GmailAccount[]
}

model Category {
  id          String   @id @default(cuid())
  name        String
  description String
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  emails Email[]
}

model Email {
  id                 String   @id @default(cuid())
  messageId          String
  threadId           String
  subject            String
  sender             String
  receivedAt         DateTime
  body               String
  summary            String
  categoryId         String?
  userId             String
  processed          Boolean  @default(false)
  archived           Boolean  @default(false)
  hasUnsubscribeLink Boolean  @default(false)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  // Relations
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  category Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  @@unique([userId, messageId])
  @@index([userId])
  @@index([categoryId])
  @@index([messageId])
}

model GmailAccount {
  id           String   @id @default(cuid())
  email        String   @unique
  name         String?
  picture      String?
  userId       String
  accessToken  String
  refreshToken String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
