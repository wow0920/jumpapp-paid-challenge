// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  picture   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  categories    Category[]
  emails        Email[]
  gmailAccounts GmailAccount[]
}

model Category {
  id          String   @id @default(uuid())
  name        String
  description String
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  emails Email[]
}

model Email {
  id                 String   @id @default(uuid())
  messageId          String
  threadId           String
  subject            String
  sender             String
  receivedAt         DateTime
  body               String   @db.Text
  summary            String   @db.Text
  categoryId         String?
  userId             String
  processed          Boolean  @default(false)
  archived           Boolean  @default(false)
  hasUnsubscribeLink Boolean  @default(false)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  // Relations
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  category Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  @@unique([userId, messageId])
  @@index([userId])
  @@index([categoryId])
  @@index([messageId])
}

model GmailAccount {
  id           String   @id @default(uuid())
  email        String
  userId       String
  accessToken  String
  refreshToken String
  isPrimary    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, email])
  @@index([userId])
}
